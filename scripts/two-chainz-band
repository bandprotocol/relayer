#!/bin/bash
# two-chainz creates two gaiad chains and configures the relayer to 

band_chainid=bandchain
band_key=bandkey
consumer_chainid=consumer
consumer_key=conskey
consumer_cmd=bcd

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
CHAIN_DATA="$(pwd)/data"
RELAYER_DIR="$(dirname $SCRIPTDIR)"
RELAYER_CONF="$HOME/.relayer"

# Ensure bandd is installed
if ! [ -x "$(which bandd)" ]; then
  echo "Error: bandd is not installed." >&2
  exit 1
fi

# Ensure $consumer_cmd is installed
if ! [ -x "$(which $consumer_cmd)" ]; then
  echo "Error: $consumer_cmd is not installed." >&2
  exit 1
fi

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Ensure user understands what will be deleted
if [[ -d $CHAIN_DATA ]] && [[ ! "$1" == "skip" ]]; then
  read -p "$(basename $0) will delete \$(pwd)/data and \$HOME/.relayer folders. Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Delete data from old runs
# rm -rf $CHAIN_DATA &> /dev/null
rm -rf $RELAYER_CONF &> /dev/null

# Stop existing gaiad processes
# killall bandd &> /dev/null
# killall bcd &> /dev/null

set -e

# echo "Generating band & bc configurations..."
# mkdir -p $CHAIN_DATA && cd $CHAIN_DATA && cd ../
# ./scripts/one-chain bandd $band_chainid ./data 26657 26656 6060 9090 10000000000000uband 100000000uband
# ./scripts/one-chain bcd $consumer_chainid ./data 26557 26556 6061 9091 10000000000000stake 100000000stake

[ -f $CHAIN_DATA/$band_chainid.log ] && echo "$band_chainid initialized. Watch file $CHAIN_DATA/$band_chainid.log to see its execution."
[ -f $CHAIN_DATA/$consumer_chainid.log ] && echo "$consumer_chainid initialized. Watch file $CHAIN_DATA/$consumer_chainid.log to see its execution."

cd $RELAYER_DIR

echo "Building Relayer..."
make install

echo "Generating rly configurations..."
rly config init
rly config add-chains configs/band/chains

SEED0="smile stem oven genius cave resource better lunar nasty moon company ridge brass rather supply used horn three panic put venue analyst leader comic"
SEED1=$(jq -r '.mnemonic' $CHAIN_DATA/consumer/key_seed.json)
echo "Key $(rly keys restore $band_chainid $band_key "$SEED0" --coin-type 494) imported from bandchain to relayer..."
echo "Key $(rly keys restore $consumer_chainid $consumer_key "$SEED1") imported from $consumer_chainid to relayer..."

rly config add-paths configs/band/paths

echo "Creating light clients..."
sleep 3
rly light init $band_chainid -f
rly light init $consumer_chainid -f
